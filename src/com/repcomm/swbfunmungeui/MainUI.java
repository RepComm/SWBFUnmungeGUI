/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.repcomm.swbfunmungeui;

import java.awt.Color;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DropTargetEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Jon/RepComm <info@jonathancrowder.com>
 */
public class MainUI extends javax.swing.JFrame {

    public static final Color DRAG_COLOR = Color.CYAN, NORMAL_COLOR = new Color(240, 240, 240, 255);
    CustomDropTarget m_Target;
    File unmungeExecutable;
    List<File> selectedFiles;
    String command;
    StringBuilder sb;

    public static void main(String[] args) {
        new MainUI();
    }

    public MainUI() {
        init();
    }

    private void init() {
        initLookAndFeel();
        initComponents();

        selectedFiles = new ArrayList<>();

        unmungeExecutable = new File("swbf-unmunge.exe");
        if (unmungeExecutable.exists()) {
            m_PathToUnmungeField.setText(unmungeExecutable.getAbsolutePath());
        }

        sb = new StringBuilder();

        m_Target = new CustomDropTarget();

        this.m_FileDropZone.setDropTarget(m_Target);

        this.m_Run.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                regenerateCommandString();
                if (selectedFiles.size() > 0) {
                    for (File nf : selectedFiles) {
                        requestUnmunge(nf);
                    }
                }
            }
        });

        java.awt.EventQueue.invokeLater(() -> {
            setVisible(true);
        });
    }

    private void regenerateCommandString() {
        command = " -version " + m_TargetGame.getItemAt(m_TargetGame.getSelectedIndex())
                + " -imgfmt " + m_ImageFormat.getItemAt(m_ImageFormat.getSelectedIndex())
                + " -platform " + m_Platform.getItemAt(m_Platform.getSelectedIndex());
    }

    private void requestUnmunge(File f) {
        Process p;
        try {
            String cmd = unmungeExecutable.getAbsolutePath() + " -file " + f.getAbsolutePath() + command;
            logln(cmd);
            p = Runtime.getRuntime().exec(cmd);

            p.waitFor();

            BufferedReader reader = new BufferedReader(
                    new InputStreamReader(p.getInputStream()));

            String line = "";
            while ((line = reader.readLine()) != null) {
                logln(line);
            }
        } catch (IOException ex) {
            logln(ex.getMessage());
            return;
        } catch (InterruptedException ex) {
            logln("Interupted whilst trying to listen to command execution.");
            return;
        }
    }

    private void log(String append) {
        sb.append(append);
        this.m_LogDisplay.setText(sb.toString());
    }

    private void logln(String ln) {
        log("\n" + ln);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_HSplit = new javax.swing.JSplitPane();
        m_HSplitLeft = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        m_FileListDisplay = new javax.swing.JList<>();
        m_ShowChooserButton = new javax.swing.JButton();
        m_HSplitRight = new javax.swing.JSplitPane();
        m_FileDropZone = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        m_GetCommands = new javax.swing.JButton();
        m_Run = new javax.swing.JButton();
        m_OptionsPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        m_TargetGame = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        m_ImageFormat = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        m_Platform = new javax.swing.JComboBox<>();
        m_PathToUnmungeField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        m_LogDisplay = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SWBF Unmunge UI");
        setBackground(new java.awt.Color(153, 153, 153));

        m_HSplit.setDividerLocation(250);

        m_HSplitLeft.setDividerLocation(150);
        m_HSplitLeft.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        m_FileListDisplay.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected File List"));
        jScrollPane1.setViewportView(m_FileListDisplay);

        m_HSplitLeft.setTopComponent(jScrollPane1);

        m_ShowChooserButton.setText("Pick Files");
        m_ShowChooserButton.setEnabled(false);
        m_HSplitLeft.setRightComponent(m_ShowChooserButton);

        m_HSplit.setTopComponent(m_HSplitLeft);

        m_HSplitRight.setDividerLocation(150);
        m_HSplitRight.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        m_FileDropZone.setBorder(javax.swing.BorderFactory.createTitledBorder("Drag 'n' Drop Zone"));

        javax.swing.GroupLayout m_FileDropZoneLayout = new javax.swing.GroupLayout(m_FileDropZone);
        m_FileDropZone.setLayout(m_FileDropZoneLayout);
        m_FileDropZoneLayout.setHorizontalGroup(
            m_FileDropZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        m_FileDropZoneLayout.setVerticalGroup(
            m_FileDropZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        m_HSplitRight.setLeftComponent(m_FileDropZone);

        m_GetCommands.setText("Get Commands");

        m_Run.setText("Run");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(m_GetCommands, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
            .addComponent(m_Run, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(m_GetCommands)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_Run)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        m_HSplitRight.setRightComponent(jPanel1);

        m_HSplit.setRightComponent(m_HSplitRight);

        jLabel1.setText("Target Game");

        m_TargetGame.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "swbf", "swbf_ii" }));
        m_TargetGame.setBorder(null);

        jLabel2.setText("Image Format");

        m_ImageFormat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tga", "png", "dds" }));

        jLabel3.setText("Target Platform");

        m_Platform.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pc", "ps2", "xbox" }));

        m_PathToUnmungeField.setText("Couldn't find unmunge: Drag And Drop swbf-unmunge.exe onto the Drop Zone");

        javax.swing.GroupLayout m_OptionsPaneLayout = new javax.swing.GroupLayout(m_OptionsPane);
        m_OptionsPane.setLayout(m_OptionsPaneLayout);
        m_OptionsPaneLayout.setHorizontalGroup(
            m_OptionsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, m_OptionsPaneLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_TargetGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_ImageFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_Platform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
            .addGroup(m_OptionsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m_PathToUnmungeField)
                .addContainerGap())
        );
        m_OptionsPaneLayout.setVerticalGroup(
            m_OptionsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(m_OptionsPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(m_OptionsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_TargetGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(m_ImageFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(m_Platform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_PathToUnmungeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        m_LogDisplay.setColumns(20);
        m_LogDisplay.setRows(5);
        jScrollPane2.setViewportView(m_LogDisplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m_HSplit, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addComponent(m_OptionsPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m_HSplit, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_OptionsPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initLookAndFeel() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    private class CustomDropTarget extends DropTarget {

        @Override
        public synchronized void dragEnter(DropTargetDragEvent evt) {
            m_FileDropZone.setBackground(DRAG_COLOR);
        }

        @Override
        public synchronized void dragExit(DropTargetEvent evt) {
            m_FileDropZone.setBackground(NORMAL_COLOR);
        }

        @Override
        public synchronized void drop(DropTargetDropEvent evt) {
            try {
                m_FileDropZone.setBackground(NORMAL_COLOR);
                evt.acceptDrop(DnDConstants.ACTION_COPY);

                List<File> droppedFiles = (List<File>) evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);

                List<String> listData = new ArrayList<>();

                for (File f : droppedFiles) {
                    if (f.getName().equals("swbf-unmunge.exe")) {
                        if (!unmungeExecutable.exists()) {
                            m_PathToUnmungeField.setText(f.getAbsolutePath());
                            unmungeExecutable = f.getAbsoluteFile();
                        }
                    } else if (f.getName().endsWith(".lvl")) {
                        selectedFiles.add(f);
                        listData.add(f.getName());
                    }
                }

                String[] fileNameList = new String[listData.size()];
                m_FileListDisplay.setListData(listData.toArray(fileNameList));
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JPanel m_FileDropZone;
    public javax.swing.JList<String> m_FileListDisplay;
    public javax.swing.JButton m_GetCommands;
    public javax.swing.JSplitPane m_HSplit;
    public javax.swing.JSplitPane m_HSplitLeft;
    public javax.swing.JSplitPane m_HSplitRight;
    public javax.swing.JComboBox<String> m_ImageFormat;
    public javax.swing.JTextArea m_LogDisplay;
    public javax.swing.JPanel m_OptionsPane;
    public javax.swing.JTextField m_PathToUnmungeField;
    public javax.swing.JComboBox<String> m_Platform;
    public javax.swing.JButton m_Run;
    public javax.swing.JButton m_ShowChooserButton;
    public javax.swing.JComboBox<String> m_TargetGame;
    // End of variables declaration//GEN-END:variables
}
